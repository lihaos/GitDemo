<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ch.netem.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="Question">
    <id column="qqid" jdbcType="INTEGER" property="questionId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="qsid" jdbcType="INTEGER" property="subjectId" />
    <result column="question_level" jdbcType="INTEGER" property="questionLevel" />
    <!--association collection李浩  -->
    <association property="subject" javaType="subject">
    <id property="subjectId" column="ssid"/>
    <result property="subjectName" column="subject_name"/>
    </association>
    
    <collection property="answerList" ofType="answer">
    <id property="answerId" column="answer_id"/>
    <result property="questionId" column="aqid"/>
    <result property="content" column="content"/>
    <result property="istrue" column="isTrue"/>
    </collection>
    
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question_id, type, title, subject_id, question_level
  </sql>
  <select id="selectByExample" parameterType="QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    qs.question_id as qqid,  qs.type,  qs.title,  qs.subject_id as qsid,  qs.question_level,
    aw.answer_id,aw.question_id aqid,aw.content,aw.isTrue,
    sj.subject_id as ssid,sj.subject_name
    from question qs,answer aw,`subject` sj
    where qs.question_id = #{questionId}
	and qs.question_id = aw.question_id
	and qs.subject_id = sj.subject_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from question
    where question_id = #{questionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="QuestionExample">
    delete from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="Question">
  <selectKey keyProperty="questionId" resultType="java.lang.Integer" order="AFTER">
  SELECT LAST_INSERT_Id();
  </selectKey>
    insert into question (type, title, 
      subject_id, question_level)
    values (#{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{subjectId,jdbcType=INTEGER}, #{questionLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="Question">
    insert into question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        question_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="questionLevel != null">
        question_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="questionId != null">
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="questionLevel != null">
        #{questionLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="QuestionExample" resultType="java.lang.Long">
    select count(*) from question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update question
    <set>
      <if test="record.questionId != null">
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.questionLevel != null">
        question_level = #{record.questionLevel,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update question
    set question_id = #{record.questionId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      question_level = #{record.questionLevel,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="Question">
    update question
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="questionLevel != null">
        question_level = #{questionLevel,jdbcType=INTEGER},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="Question">
    update question
    set type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      subject_id = #{subjectId,jdbcType=INTEGER},
      question_level = #{questionLevel,jdbcType=INTEGER}
    where question_id = #{questionId,jdbcType=INTEGER}
  </update>
  
  
  <!-- 手打-->
   <select id="getQuestionByTestId" parameterType="question" resultMap="BaseResultMap">
    select
    qs.question_id as qqid,  qs.type,  qs.title,  qs.subject_id as qsid,  qs.question_level,
    aw.answer_id,aw.question_id aqid,aw.content,aw.isTrue,
    sj.subject_id as ssid,sj.subject_name
    from question qs,test_paper_question tpqs,answer aw,`subject` sj
    where 
	qs.question_id = tpqs.question_id 
	and tpqs.test_paper_id = #{testPaperId} 
	and qs.question_id = aw.question_id
	and qs.subject_id = sj.subject_id
  </select>
  
  <select id="getQuestionByRand" parameterType="map" resultMap="BaseResultMap">
  	select
    qs.question_id as qqid,  qs.type,  qs.title,  qs.subject_id as qsid,  qs.question_level,
    sj.subject_id as ssid,sj.subject_name
    from question qs,test_paper_question tpqs,answer aw,`subject` sj
    where 
	qs.question_id = tpqs.question_id 
	and qs.subject_id = #{subjectId} 
	and qs.question_level = #{level} 
	and qs.subject_id = sj.subject_id
	GROUP BY qs.question_id
	ORDER BY RAND()
	LIMIT #{questionQuantity}
  </select>
  
  <select id="getQuestionList" resultMap="BaseResultMap">
  	select
    qs.question_id as qqid,  qs.type,  qs.title,  qs.subject_id as qsid,  qs.question_level,
    sj.subject_id as ssid,sj.subject_name
    from question qs,`subject` sj
    where qs.subject_id = sj.subject_id
    <if test="title!=null">
    AND qs.title LIKE CONCAT('%',#{title},'%')
    </if>
    LIMIT #{pageNo},5
  </select>
  
  <select id="getQuestionCount" resultType="int">
    select
    count(1)
    from 
    `question`
    where 1=1
    <if test="title!=null">
    and title LIKE CONCAT('%',#{title},'%')
    </if>
  </select>
  
  <delete id="deleteQuestion" parameterType="int">
  delete from `question` where question_id = #{questionId}
  </delete>
  
  
  <update id="updateQuestion" parameterType="question">
  	update 
  	question
    set 
    type = #{type},
    title = #{title},
    subject_id = #{subjectId},
    question_level = #{questionLevel}
    where question_id = #{questionId}
  </update>
</mapper>