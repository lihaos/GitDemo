<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ch.netem.mapper.UserTestPaperMapper">
  <resultMap id="BaseResultMap" type="UserTestPaper">
    <id column="utpid" jdbcType="INTEGER" property="userTestPaperId" />
    <result column="utpsid" jdbcType="INTEGER" property="subjectId" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="question_quantity" jdbcType="INTEGER" property="questionQuantity" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="test_date" jdbcType="TIMESTAMP" property="testDate" />
    <result column="test_paper_title" jdbcType="VARCHAR" property="testPaperTitle" />
    
    <association property="subject" javaType="subject" >
    <id property="subjectId" column="sjid"/>
    <result property="subjectName" column="subject_name"/>
    </association>
    
    <collection property="questionList"  ofType="userTestPaperQuestion">
    <id property="id" column="id"/>
    <result property="questionId" column="utpqqid"/>
    <result property="userTestPaperId" column="utpqid"/>
    <result property="answerId" column="utpqaid"/>
    <result property="istrue" column="utpqit"/>
    <association property="question" javaType="question">
    <id column="qsqid" jdbcType="INTEGER" property="questionId"/>
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="qssid" jdbcType="INTEGER" property="subjectId" />
    <result column="question_level" jdbcType="INTEGER" property="questionLevel" />
    <collection property="answerList" ofType="answer">
    <id property="answerId" column="anid"/>
    <result property="questionId" column="anqid"/>
    <result property="content" column="content"/>
    <result property="istrue" column="anit"/>
    </collection>
    </association>
    
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_test_paper_id, subject_id, score, level, question_quantity, user_id, test_date,test_paper_title
  </sql>
  <select id="selectByExample" parameterType="UserTestPaperExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    user_test_paper_id, subject_id, score, level, question_quantity, user_id, test_date,test_paper_title
    from user_test_paper
    where user_test_paper_id = #{userTestPaperId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_test_paper
    where user_test_paper_id = #{userTestPaperId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="UserTestPaperExample">
    delete from user_test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="UserTestPaper">
  <selectKey keyProperty="userTestPaperId" resultType="java.lang.Integer" order="AFTER">
  SELECT LAST_INSERT_Id();
  </selectKey>
    insert into user_test_paper (subject_id, score, 
      level, question_quantity, user_id, 
      test_date,test_paper_title)
    values (#{subjectId,jdbcType=INTEGER}, #{score,jdbcType=DOUBLE}, 
      #{level,jdbcType=INTEGER}, #{questionQuantity,jdbcType=INTEGER},#{userId,jdbcType=INTEGER}, 
      #{testDate,jdbcType=TIMESTAMP},#{testPaperTitle,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="UserTestPaper">
    insert into user_test_paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userTestPaperId != null">
        user_test_paper_id,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="questionQuantity != null">
        question_quantity,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="testDate != null">
        test_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userTestPaperId != null">
        #{userTestPaperId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="questionQuantity != null">
        #{questionQuantity,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="testDate != null">
        #{testDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="UserTestPaperExample" resultType="java.lang.Long">
    select count(*) from user_test_paper
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_test_paper
    <set>
      <if test="record.userTestPaperId != null">
        user_test_paper_id = #{record.userTestPaperId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null">
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.questionQuantity != null">
        question_quantity = #{record.questionQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.testDate != null">
        test_date = #{record.testDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_test_paper
    set user_test_paper_id = #{record.userTestPaperId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=DOUBLE},
      level = #{record.level,jdbcType=INTEGER},
      question_quantity = #{record.questionQuantity,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      test_date = #{record.testDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="UserTestPaper">
    update user_test_paper
    <set>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="questionQuantity != null">
        question_quantity = #{questionQuantity,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="testDate != null">
        test_date = #{testDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_test_paper_id = #{userTestPaperId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="UserTestPaper">
    update user_test_paper
    set subject_id = #{subjectId,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      level = #{level,jdbcType=INTEGER},
      question_quantity = #{questionQuantity,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      test_date = #{testDate,jdbcType=TIMESTAMP}
    where user_test_paper_id = #{userTestPaperId,jdbcType=INTEGER}
  </update>
  
    <select id="selectByUserTestPaperId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	SELECT
	utp.`user_test_paper_id` utpid,utp.`subject_id` utpsid,utp.`score`,utp.`level`,utp.`question_quantity`,utp.`user_id`,utp.`test_date`,utp.`test_paper_title`,
	utpq.id,utpq.`question_id` utpqqid,utpq.`user_test_paper_id` utpqid,utpq.`answer_id` utpqaid,utpq.`isTrue` utpqit,
	qs.`question_id` qsqid,qs.`subject_id` qssid,qs.`question_level`,qs.`title`,qs.`type`,
	an.`answer_id` anid,an.`content`,an.`isTrue` anit,an.`question_id` anqid
	FROM `user_test_paper` utp,`user_test_paper_question` utpq,`question`
	qs,`answer` an
	WHERE utp.`user_test_paper_id`=utpq.`user_test_paper_id`
	AND utpq.`question_id`=qs.`question_id`
	AND qs.`question_id`=an.`question_id`
	AND utp.`user_test_paper_id`=#{userTestPaperId}
  </select>
  
  
  <select id="selectByUserId" parameterType="map" resultMap="BaseResultMap">
  	SELECT
    utp.`user_test_paper_id` utpid,utp.subject_id utpsid,utp.`score`,utp.`level`,utp.`question_quantity`,utp.`user_id`,utp.`test_date`,utp.`test_paper_title`,
    sj.`subject_id` sjid,sj.`subject_name`
    FROM 
    `user_test_paper` utp,`subject` sj
    WHERE utp.subject_id= sj.`subject_id`
    <if test="testPaperTitle!=null">
    and utp.test_paper_title like CONCAT('%',#{testPaperTitle},'%')  
    </if>
    AND utp.`user_id`=#{userId}
    limit #{pageNo},3
  </select>
   <select id="getTestPaperCount" parameterType="map" resultType="int">
    select
    count(1)
    from 
    `user_test_paper`
    where user_id=#{userId}
    <if test="testPaperTitle!=null">
    and test_paper_title like CONCAT('%',#{testPaperTitle},'%')  
    </if>
  </select>
</mapper>